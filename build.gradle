buildscript {

    ext {
        versions = [
                jackson   :  '2.9.5',
                springBoot:  '2.0.0.RELEASE',
                andamio:     '2.0.0',
                springKafka: '2.1.5.RELEASE',
                spock:       '1.1-groovy-2.4',
                groovy:      '2.4.15'
        ]
    }

    repositories {
        maven { url 'https://artifactory.allegrogroup.com/artifactory/group-maven/' }
        mavenCentral()
    }

    dependencies {
        classpath group: 'pl.allegro.tech.build', name: 'axion-gradle-plugin', version: "1.2.2"
        classpath group: 'pl.allegro.tech.phoenix', name: 'phoenix-provisioning-plugin', version: "1.0.12"
    }
}

plugins {
    id 'groovy'
    id 'application'
    id "com.moowork.node" version "1.2.0"
    id 'maven-publish'
    id 'pl.allegro.tech.build.axion-release' version '1.7.2'
}

apply plugin: 'axion'
apply plugin: 'phoenix-provisioning'

scmVersion {
    tag {
        prefix = project.rootProject.name
    }
    versionCreator 'versionWithBranch'
}

sourceCompatibility = 10

project.group = 'pl.allegro.experiments.chi'
project.version = scmVersion.version

repositories {
    maven { url 'https://artifactory.allegrogroup.com/artifactory/group-maven/' }
    mavenCentral()
}

dependencies {
    compile 'org.javers:javers-spring-boot-starter-mongo:3.9.0'
    compile 'pl.allegro.tech.common:andamio-starter-webmvc:' + versions.andamio
    compile group: 'org.springframework.security.oauth.boot', name: 'spring-security-oauth2-autoconfigure', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: versions.springBoot
    compile group: 'org.springframework.session', name: 'spring-session-data-mongodb', version: '2.0.2.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.8.RELEASE'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-avro', version: versions.jackson
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: versions.jackson
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: versions.jackson
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: versions.springKafka
    compile group: 'pl.allegro.tech.common', name: 'spring-boot-starter-andamio-avro', version: '0.7.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.github.slugify:slugify:2.1.12'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-properties-migrator', version: versions.springBoot

    testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.6'
    testCompile group: 'org.objenesis', name: 'objenesis', version: '1.2'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.1.11'

    testCompile group: 'org.spockframework', name: 'spock-core', version: versions.spock
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: versions.groovy

    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    testCompile group: 'org.spockframework', name: 'spock-spring', version: versions.spock
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot
    testCompile group: 'org.springframework.kafka', name: 'spring-kafka-test', version: versions.springKafka
    testCompile group: 'com.github.fakemongo', name: 'fongo', version: '2.2.0-RC1'
}

mainClassName = 'pl.allegro.experiments.chi.chiserver.AppRunner'

node {
    version = '8.9.1'
    download = true
}

task frontendDeps(type: YarnTask) {
    execOverrides { it.workingDir = './src/main/frontend' }
    args = ['install']
}

task frontendBuild(type: YarnTask) {
    dependsOn frontendDeps
    execOverrides { it.workingDir = './src/main/frontend' }
    args = ['build']
}

processResources {
    dependsOn frontendBuild
    from ('public/') {
        into 'public'
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

integrationTest {
    testLogging {
        exceptionFormat = 'full'
    }
}
test {
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

axionPublishing {
    repositories {
        allegro {
            url = 'https://artifactory.allegrogroup.com/artifactory/allegro-{}s-local/'
        }
    }
    apply()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}
