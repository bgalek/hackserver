buildscript {

    ext {
        versions = [
                kotlin: '1.1.51',
                jackson: '2.9.1'
        ]
    }

    repositories {
        maven { url 'https://artifactory.allegrogroup.com/artifactory/group-maven/' }
        mavenCentral()
    }

    dependencies {
        classpath group: 'pl.allegro.tech.build', name: 'axion-gradle-plugin', version: "1.2.2"
        classpath group: 'pl.allegro.tech.phoenix', name: 'phoenix-provisioning-plugin', version: "1.0.12"
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: "$versions.kotlin"
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-allopen', version: "$versions.kotlin"
    }
}

plugins {
    id 'groovy'
    id 'application'
    id "com.moowork.node" version "1.2.0"
    id 'maven-publish'
    id 'pl.allegro.tech.build.axion-release' version '1.7.2'
}

apply plugin: 'axion'
apply plugin: 'phoenix-provisioning'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'

scmVersion {
    tag {
        prefix = project.rootProject.name
    }
    versionCreator 'versionWithBranch'
}

sourceCompatibility = 1.8

project.group = 'pl.allegro.experiments.chi'
project.version = scmVersion.version

repositories {
    maven { url 'https://artifactory.allegrogroup.com/artifactory/group-maven/' }
    mavenCentral()
}

dependencies {
    compile 'org.springframework:spring-web:4.3.10.RELEASE'
    compile group: 'pl.allegro.tech.common', name: 'spring-boot-starter-andamio', version: '1.9.3'
    compile group: 'pl.allegro.experiments.chi', name: 'chi-core', version: '0.5.1'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-avro', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: "$versions.jackson"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: "$versions.jackson"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: "$versions.kotlin"
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '1.3.0.RELEASE'
    compile group: 'pl.allegro.tech.common', name: 'spring-boot-starter-andamio-avro', version: '0.5.1'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.github.slugify:slugify:2.1.12'
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'

    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version: '2.1.11'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'

    integration group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    integration group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4'
    integration group: 'org.springframework', name: 'spring-test', version: '4.3.10.RELEASE'
    integration group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.2.RELEASE'
    integration group: 'org.springframework.kafka', name: 'spring-kafka-test', version: '1.3.0.RELEASE'
}

mainClassName = 'pl.allegro.experiments.chi.chiserver.AppRunner'

node {
    version = '8.9.1'
    download = true
}

task frontendDeps(type: YarnTask) {
    execOverrides { it.workingDir = './src/main/frontend' }
    args = ['install']
}
task frontendBuild(type: NodeTask) {
    dependsOn frontendDeps
    script = file('./src/main/frontend/node_modules/poi/bin/main.js')
    execOverrides { it.workingDir = './src/main/frontend'}
    args = ['build']
}

processResources {
    dependsOn frontendBuild
    from ('public/') {
        into 'public'
    }
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

integrationTest {
    testLogging {
        exceptionFormat = 'full'
    }
}

axionPublishing {
    repositories {
        allegro {
            url = 'https://artifactory.allegrogroup.com/artifactory/allegro-{}s-local/'
        }
    }
    apply()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.1'
}
